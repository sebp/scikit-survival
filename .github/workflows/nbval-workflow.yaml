name: Notebooks
on: [push, pull_request]

jobs:
  checks:
    runs-on: ubuntu-latest
    name: Build and check notebooks
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Adding conda to PATH
        run: echo "${CONDA}/bin" >> $GITHUB_PATH
      - name: Set dependencies
        id: dependencies
        env:
          DEPS_CONFIG: py38_pandas11_numpy119_sklearn024
        run: |
          source ci/deps/${DEPS_CONFIG}.sh
          echo "CONDA_PYTHON_VERSION=${CONDA_PYTHON_VERSION}" >> $GITHUB_ENV
          echo "PANDAS_VERSION=${PANDAS_VERSION}" >> $GITHUB_ENV
          echo "NUMPY_VERSION=${NUMPY_VERSION}" >> $GITHUB_ENV
          echo "SKLEARN_VERSION=${SKLEARN_VERSION}" >> $GITHUB_ENV
          echo "NO_SLOW=${NO_SLOW}" >> $GITHUB_ENV
          echo "::set-output name=requirements::ci/deps/${DEPS_CONFIG}.sh"
          echo "::set-output name=conda_pkgs::$(${CONDA}/bin/python -c "from conda.base.context import context; print(context.pkgs_dirs[0])")"
      - name: Cache downloaded packages
        uses: actions/cache@v2
        with:
          path: ${{ steps.dependencies.outputs.conda_pkgs }}
          key: ${{ runner.os }}-conda-${{ hashFiles(steps.dependencies.outputs.requirements) }}
          restore-keys: |
            ${{ runner.os }}-conda-
      - name: Create Conda Environment
        run: |
          sudo chown -R $USER $CONDA
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          ci/setup_env.sh ${{ runner.os }}
      - name: Install Dependencies
        run: |
          python3 ci/list-requirements.py requirements/dev.txt > /tmp/conda-req.txt
          conda install -c sebp -n sksurv-test --file /tmp/conda-req.txt
          conda install -n sksurv-test ipykernel 'matplotlib==3.3.4' nbformat 'seaborn==0.10.1'
          conda run -n sksurv-test pip install nbval
          conda list -n sksurv-test
      - name: Build package
        run: |
          source activate sksurv-test
          pip wheel --wheel-dir dist/ --no-binary scikit-survival --no-deps -e .
          pip install --exists-action=w --pre --no-index --find-links dist/ scikit-survival
          rm -fr build dist
      - name: Test notebooks
        run: |
          source activate sksurv-test
          pytest --nbval doc/user_guide/*.ipynb --sanitize-with ci/nb_sanitize.cfg
