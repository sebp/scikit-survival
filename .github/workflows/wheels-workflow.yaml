name: Build Wheels

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_wheel:
        description: 'Whether to publish wheels to TestPyPI'
        default: false
        type: boolean


jobs:
  build_wheels:
    name: Build wheels ðŸ“¦ on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15-intel, macos-latest]
        python: [310, 311, 312, 313]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Set platform
        id: platform
        shell: bash
        run: |
          if [ ${{ runner.os }} = 'Linux' ]; then
            echo "build_platform=manylinux" >> $GITHUB_OUTPUT
          elif [ ${{ runner.os }} = 'macOS' ]; then
            echo "build_platform=macosx" >> $GITHUB_OUTPUT
          elif [ ${{ runner.os }} = 'Windows' ]; then
            echo "build_platform=win_amd64" >> $GITHUB_OUTPUT
          fi

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_ARCHS: auto64
          CIBW_BUILD: cp${{ matrix.python }}-${{ steps.platform.outputs.build_platform }}*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=${{ runner.arch == 'ARM64' && '11.0' || '10.13' }}
          CIBW_TEST_COMMAND: pytest --strict-markers -m 'not slow' -k 'not test_fit_and_predict_linear_regression' {project}/tests
          CIBW_TEST_COMMAND_WINDOWS: pytest --strict-markers -m "not slow" -k "not test_fit_and_predict_linear_regression" {project}\\tests
          CIBW_TEST_REQUIRES: pytest
          # Skip trying to test arm64 builds on Intel Macs, and vice versa
          CIBW_TEST_SKIP: "*-macosx_${{ runner.arch == 'ARM64' && 'x86_64' || 'arm64' }} *-macosx_universal2"
      - uses: actions/upload-artifact@v5
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build source distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Build sdist
        run: pipx run build --sdist

      - name: Check README rendering for PyPI
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v5
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  publish-to-testpypi:
    name: >-
      Publish scikit-surival ðŸ“‰ distribution ðŸ“¦ to TestPyPI
    if: github.repository == 'sebp/scikit-survival' && github.event_name == 'workflow_dispatch' && inputs.publish_wheel
    needs:
    - build_wheels
    - build_sdist
    runs-on: ubuntu-latest

    environment:
      name: testpypi-release
      url: https://test.pypi.org/p/scikit-survival  # TestPyPI project name

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      attestations: write

    steps:
      - name: Download packages
        uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Print out packages
        run: ls dist

      - name: Generate artifact attestation for sdist and wheel
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: dist/scikit_survival-*

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  publish-to-pypi:
    name: >-
      Publish scikit-surival ðŸ“‰ distribution ðŸ“¦ to PyPI
    if: github.repository == 'sebp/scikit-survival' && github.event_name == 'release' && github.ref_type == 'tag'  # only publish to PyPI on tag pushes
    needs:
    - build_wheels
    - build_sdist
    runs-on: ubuntu-latest

    environment:
      name: pypi-release
      url: https://pypi.org/p/scikit-survival  # PyPI project name

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      attestations: write

    steps:
      - name: Download packages
        uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Print out packages
        run: ls dist

      - name: Generate artifact attestation for sdist and wheel
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: dist/scikit_survival-*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
